<UserControl x:Class="GS.Server.Plot.PlotV"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:wpf="clr-namespace:LiveCharts.Wpf;assembly=LiveCharts.Wpf"
             xmlns:domain="clr-namespace:GS.Server.Domain"
             xmlns:domain1="clr-namespace:GS.Shared.Domain;assembly=GS.Shared"
             xmlns:plot="clr-namespace:GS.Server.Plot"
             xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:geared="clr-namespace:LiveCharts.Geared;assembly=LiveCharts.Geared" mc:Ignorable="d" d:DataContext="{d:DesignInstance plot:PlotVM}">
    <UserControl.Resources>
        <domain:InverseBooleanConverter x:Key="InvBol" />
    </UserControl.Resources>
    <md:DialogHost IsOpen="{Binding IsDialogOpen}" DialogContent="{Binding DialogContent}" CloseOnClickAway="True" >
        <Grid MinWidth="600">
        <md:DrawerHost BorderThickness="0" IsLeftDrawerOpen="{Binding ElementName=MenuToggleButton, Path=IsChecked}" BorderBrush="{StaticResource MaterialDesignDivider}">
        <md:DrawerHost.LeftDrawerContent>
            <Grid Width="250">
                <Grid.RowDefinitions>
                    <RowDefinition Height="40" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <Grid Grid.Row="0" Grid.Column="0" >
                    <Label HorizontalAlignment="Left" VerticalAlignment="Center" FontSize="18">Settings</Label>
                    <ToggleButton DockPanel.Dock="Top" HorizontalAlignment="Right" Margin="5" 
                        Style="{StaticResource MaterialDesignHamburgerToggleButton}" 
                        Command="{x:Static md:DrawerHost.CloseDrawerCommand}"
                        CommandParameter="{x:Static Dock.Left}"
                        IsChecked="{Binding ElementName=MenuToggleButton, Path=IsChecked, Mode=TwoWay}"/>
                </Grid>
                <StackPanel Grid.Row="1" Orientation="Vertical" Margin="20,0,0,0" VerticalAlignment="Top" IsEnabled="{Binding Path=IsRunning, Converter={StaticResource InvBol}}">
                    <StackPanel Orientation="Horizontal">
                        <ToggleButton Width="25" Height="25" Style="{StaticResource MaterialDesignActionLightToggleButton}" IsChecked="{Binding Values1Toggle}" />
                        <TextBlock Margin="10,0,0,0" VerticalAlignment="Center" Text="{Binding Values1Title}" />
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Margin="0,10,0,0">
                        <ToggleButton Width="25" Height="25" Style="{StaticResource MaterialDesignActionLightToggleButton}" IsChecked="{Binding Values2Toggle}" />
                        <TextBlock Margin="10,0,0,0" VerticalAlignment="Center" Text="{Binding Values2Title}" />
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Margin="0,10,0,0">
                        <ToggleButton Width="25" Height="25" Style="{StaticResource MaterialDesignActionLightToggleButton}" IsChecked="{Binding IsZeroBased}" />
                            <TextBlock Margin="10,0,0,0" VerticalAlignment="Center" Text="{StaticResource pltZero}" />
                    </StackPanel>
                            <ComboBox Margin="0,10,0,0" md:HintAssist.Hint="{StaticResource pltYScale}" HorizontalAlignment="Left" Width="100" VerticalAlignment="Bottom" Style="{StaticResource MaterialDesignFloatingHintComboBox}" ToolTip="{StaticResource pltYScale}" ItemsSource="{Binding Source={domain1:EnumValueBindingSourceExtension {x:Type plot:ChartScale}}}">
                        <ComboBox.SelectedItem>
                                    <Binding Path="Scale" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <domain1:NotEmptyValidationRule ValidatesOnTargetUpdated="True" />
                                </Binding.ValidationRules>
                            </Binding>
                        </ComboBox.SelectedItem>
                        <ComboBox.ItemsPanel>
                            <ItemsPanelTemplate>
                                <VirtualizingStackPanel />
                            </ItemsPanelTemplate>
                        </ComboBox.ItemsPanel>
                    </ComboBox>
                            <ComboBox Margin="0,10,0,0" md:HintAssist.Hint="{StaticResource pltQuality}" HorizontalAlignment="Left" Width="100" VerticalAlignment="Bottom" Style="{StaticResource MaterialDesignFloatingHintComboBox}" ToolTip="{StaticResource pltQuality}" ItemsSource="{Binding Source={domain1:EnumValueBindingSourceExtension {x:Type geared:Quality}}}">
                        <ComboBox.SelectedItem>
                            <Binding Path="ChartQuality" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <domain1:NotEmptyValidationRule ValidatesOnTargetUpdated="True" />
                                </Binding.ValidationRules>
                            </Binding>
                        </ComboBox.SelectedItem>
                        <ComboBox.ItemsPanel>
                            <ItemsPanelTemplate>
                                <VirtualizingStackPanel />
                            </ItemsPanelTemplate>
                        </ComboBox.ItemsPanel>
                    </ComboBox>
                        <ComboBox Margin="0,10,0,0" md:HintAssist.Hint="{StaticResource pltMaxPoints}" HorizontalAlignment="Left" Width="100" VerticalAlignment="Bottom"  ItemsSource="{Binding MaxPointsRange}" ToolTip="{StaticResource pltMaxPltPoints}" Style="{StaticResource MaterialDesignFloatingHintComboBox}">
                        <ComboBox.SelectedItem>
                            <Binding Path="MaxPoints" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <domain1:NotEmptyValidationRule ValidatesOnTargetUpdated="True" />
                                </Binding.ValidationRules>
                            </Binding>
                        </ComboBox.SelectedItem>
                        <ComboBox.ItemsPanel>
                            <ItemsPanelTemplate>
                                <VirtualizingStackPanel />
                            </ItemsPanelTemplate>
                        </ComboBox.ItemsPanel>
                    </ComboBox>
                        <StackPanel Margin="0,10,0,0" Orientation="Horizontal">
                            <ToggleButton Width="25" Height="25" Style="{StaticResource MaterialDesignActionLightToggleButton}" IsChecked="{Binding IsLogging}" />
                                <TextBlock Margin="10,0,0,0" VerticalAlignment="Center" Text="{StaticResource pltLogging}" />
                    </StackPanel>
                    </StackPanel>
            </Grid>
        </md:DrawerHost.LeftDrawerContent>
            <Grid Margin="5,5" >
                <Grid.RowDefinitions>
                        <RowDefinition Height="40" />
                        <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <ToggleButton Grid.Row="0" HorizontalAlignment="Left" VerticalAlignment="Top" IsChecked="False" x:Name="MenuToggleButton"
                              Command="{x:Static md:DrawerHost.OpenDrawerCommand}" CommandParameter="{x:Static Dock.Left}" Style="{StaticResource MaterialDesignHamburgerToggleButton}" />
                <StackPanel Orientation="Horizontal" Grid.Row="0" HorizontalAlignment="Center">
                    <md:Badged Badge="{Binding StartBadgeContent}" VerticalAlignment="Center">
                        <Button Margin="10,0,0,0" Height="30" ToolTip="{StaticResource pltStart}" Style="{StaticResource MaterialDesignRaisedDarkButton}" Command="{Binding ClickPlotStartCmd}" Content="{StaticResource pltStart}" />
                    </md:Badged>
                    <Button Margin="15,0,0,0" Height="30" ToolTip="{StaticResource pltClear}" VerticalAlignment="Center" Style="{StaticResource MaterialDesignRaisedDarkButton}" Command="{Binding ClickPlotClearCmd}" Content="{StaticResource pltClear}" />
                    <md:Badged Badge="{Binding PauseBadgeContent}" VerticalAlignment="Center">
                        <Button Margin="10,0,0,0" Height="30" ToolTip="Fit Chart" Style="{StaticResource MaterialDesignRaisedDarkButton}" Command="{Binding ClickPlotPauseCmd}" Content="{StaticResource pltPause}" />
                    </md:Badged>
                    <Button Margin="10,0,0,0" Height="30" ToolTip="Fit Chart" Style="{StaticResource MaterialDesignRaisedDarkButton}" Command="{Binding ClickPlotSizeCmd}" Content="{StaticResource pltSize}" />
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                        <TextBlock VerticalAlignment="Center" Margin="10,0,0,0" Text="Zoom:" />
                        <RadioButton GroupName="zoom" Margin="5,0,0,0" Content="X" Command="{Binding Path=ClickPlotZoomCmd}" CommandParameter="X" />
                        <RadioButton GroupName="zoom" Margin="5,0,0,0" Content="Y" Command="{Binding Path=ClickPlotZoomCmd}" CommandParameter="Y" />
                        <RadioButton GroupName="zoom" Margin="5,0,0,0" Content="Xy" Command="{Binding Path=ClickPlotZoomCmd}" CommandParameter="Xy" IsChecked="True" />
                    </StackPanel>
                </StackPanel>
                <wpf:CartesianChart Grid.Row="1" Foreground="DarkGray" Hoverable="True" Zoom="{Binding Zoom}" LegendLocation="Bottom" DisableAnimations="True"  
                                    Series="{Binding ValuesCollection, Mode=OneWay}" >
                    <wpf:CartesianChart.DataTooltip>
                        <wpf:DefaultTooltip SelectionMode="OnlySender" Foreground="Black" />
                    </wpf:CartesianChart.DataTooltip>
                    <wpf:CartesianChart.AxisX>
                        <wpf:Axis FontSize="18" DisableAnimations="True" Foreground="DarkGray" LabelFormatter="{Binding FormatterX, Mode=TwoWay}" MaxValue="{Binding AxisXMax, Mode=TwoWay}" 
                                  MinValue="{Binding AxisXMin, Mode=TwoWay}" Unit="{Binding AxisXUnit, Mode=TwoWay}" >
                            <wpf:Axis.Separator>
                                <wpf:Separator Stroke="DarkGray" StrokeThickness=".2" />
                            </wpf:Axis.Separator>
                        </wpf:Axis>
                    </wpf:CartesianChart.AxisX>
                    <wpf:CartesianChart.AxisY>
                        <wpf:Axis Title="{Binding Scale, Mode=TwoWay}" FontSize="15" Foreground="DarkGray" ShowLabels="True" DisableAnimations="True" 
                                  LabelFormatter="{Binding FormatterY}" MaxValue="{Binding AxisYMax, Mode=TwoWay}" MinValue="{Binding AxisYMin, Mode=TwoWay}"
                                  Unit="{Binding AxisYUnit, Mode=TwoWay}">
                            <wpf:Axis.Sections>
                                <wpf:AxisSection Value="0" StrokeThickness="1" Stroke="DarkGray" DisableAnimations="True"/>
                            </wpf:Axis.Sections>
                            <wpf:Axis.Separator>
                                <wpf:Separator Stroke="DimGray" StrokeThickness="1" />
                            </wpf:Axis.Separator>
                        </wpf:Axis>
                    </wpf:CartesianChart.AxisY>
                </wpf:CartesianChart>
                <ListView Grid.Row="1" BorderThickness="0" Opacity="1" HorizontalAlignment="Left" Margin="110,10,0,0" Name="ListView1" VerticalAlignment="Top" ItemsSource="{Binding TitleItems}">
                    <b:Interaction.Triggers>
                        <b:EventTrigger EventName="PreviewMouseLeftButtonUp">
                            <b:InvokeCommandAction Command="{Binding ClickPlotSeriesCmd}" CommandParameter="{Binding ElementName=ListView1, Path=SelectedItem}" />
                        </b:EventTrigger>
                    </b:Interaction.Triggers>
                    <ListView.ItemTemplate>
                        <DataTemplate DataType="plot:TitleItem">
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="{Binding Path=TitleName}" Foreground="{Binding Path=Fill}" FontSize="25" Opacity=".5" />
                                    <TextBlock Text="{Binding Path=Value}" Foreground="{Binding Path=Fill}" FontSize="25" Opacity=".5" Margin="10,0,0,0" />
                            </StackPanel>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                    <ListView.ItemContainerStyle>
                        <Style TargetType="{x:Type ListBoxItem}">
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                                        <ContentPresenter />
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ListView.ItemContainerStyle>
                </ListView>
            </Grid>
    </md:DrawerHost>
    </Grid>
    </md:DialogHost>    
</UserControl>
